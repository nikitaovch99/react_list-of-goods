{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","reset","setState","reverse","sortByLength","LENGTH","sortyByAlphabet","ALPHABET","this","reorderedGoods","goods","visibleGoods","sort","goodsA","goodsB","length","localeCompare","console","log","getReorderedGoods","className","onClick","type","classNames","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,MAAQ,WACN,EAAKC,SAAS,CAAEJ,SAAUJ,EAASK,KAAMC,YAAY,KAPzD,EAUEG,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAZzB,EAgBEI,aAAe,WACb,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,UAjBvC,EAoBEC,gBAAkB,WAChB,EAAKJ,SAAS,CAAEJ,SAAUJ,EAASa,YArBvC,4CAwBE,WACE,MAAiCC,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAEZS,EAtDH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENW,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAgBC,GACjC,OAAQhB,GACN,KAAKJ,EAASW,OACZ,OAAOQ,EAAOE,OAASD,EAAOC,OAChC,KAAKrB,EAASa,SACZ,OAAOM,EAAOG,cAAcF,GAC9B,QACE,OAAO,MAITd,GACFW,EAAaR,UAIfc,QAAQC,IAAIpB,EAAUE,GAEfW,EA8BkBQ,CAAkBxB,EAAiBa,KAAKX,OAE/D,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASb,KAAKF,gBACdgB,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYzB,IAAaJ,EAASa,WALxC,iCAUA,wBACEe,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYzB,IAAaJ,EAASW,SAEtCgB,QAASb,KAAKJ,aANhB,4BAUA,wBACEkB,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,YAAavB,IAEjBqB,QAASb,KAAKL,QANhB,sBAUEL,IAAaJ,EAASK,MAAQC,IAE9B,wBACEqB,QAASb,KAAKP,MACdqB,KAAK,SACLF,UAAU,4BAHZ,sBASJ,6BACE,6BACGX,EAAee,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA5EvB,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5fd8c3f0.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n  type State = {\n    sortType: SortType,\n    isReversed: boolean,\n  };\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodsA: string, goodsB: string) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return goodsA.length - goodsB.length;\n      case SortType.ALPHABET:\n        return goodsA.localeCompare(goodsB);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortyByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortyByAlphabet}\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n          {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          <ul>\n            {reorderedGoods.map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}